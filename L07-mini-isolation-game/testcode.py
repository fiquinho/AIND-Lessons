import gamestate as gs

TEST_GAMESTATE = True

if TEST_GAMESTATE:
    
    new_game = gs.GameState()

    print("Game board: {}".format(new_game._board))
    print("Player's {} turn".format(new_game.player_turn))
    print("Players positions: {}".format(new_game.players_positions))
    print("Step number {}".format(new_game.step_number))
    print("")
    print("Legal moves: {}".format(new_game.get_legal_moves()))
    move = (2, 0)
    print("Move: {}".format(move))
    new_game = new_game.forecast_move(move)
    print("")
    print("--------------------------")
    print("")
    print("Game board: {}".format(new_game._board))
    print("Player's {} turn".format(new_game.player_turn))
    print("Players positions: {}".format(new_game.players_positions))
    print("Step number {}".format(new_game.step_number))
    print("")
    print("Legal moves: {}".format(new_game.get_legal_moves()))
    move = (4, 0)
    print("Move: {}".format(move))
    new_game = new_game.forecast_move(move)
    move = (1, 0)
    print("Move: {}".format(move))
    new_game = new_game.forecast_move(move)
    print("")
    print("--------------------------")
    print("")
    print("Game board: {}".format(new_game._board))
    print("Player's {} turn".format(new_game.player_turn))
    print("Players positions: {}".format(new_game.players_positions))
    print("Step number {}".format(new_game.step_number))
    print("")
    print("Legal moves: {}".format(new_game.get_legal_moves()))